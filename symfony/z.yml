# @version ">=2.0"

symfony: ~

tasks:
    _symfony.build.copy_local_vendor: |
        if [ -d "$(cwd)/vendor/" ];
            then rsync -rp $(cwd)/vendor/ $(build.dir)/vendor;
        fi;

    _symfony.build.composer_install: |
        cd $(build.dir) && composer install --no-scripts --prefer-dist;

    _symfony.build.assets_install: |
        cd $(build.dir) && php $(symfony.console) assets:install $(symfony.web) --env=$(target_env) --no-debug $(symfony.assets_symlink ? "--symlink");

    _symfony.build.assetic_dump: |
        cd $(build.dir) && php $(symfony.console) assetic:dump --env=$(target_env) --no-debug;

    _symfony.env.flush_cache: |
        ssh $(envs[target_env].ssh) "cd $(envs[target_env].root) && php $(symfony.console) cache:clear --env=$(target_env) --no-debug"

    build:
        post:
            - @_symfony.build.composer_install
            - ?(symfony.assets)  @_symfony.build.assets_install
            - ?(symfony.assetic) @_symfony.build.assetic_dump

    deploy:
        post:
            - ?(symfony.flush_cache) @_symfony.env.flush_cache

    symfony.logs:
        help: |
            Tail the logs at the specified environment.

            If run in verbose mode, the logs are cat'ed.
        args:
            target_env: ?
            level: ? ""
            _cmd: verbose ? "cat" : sprintf("tail %s", follow ? "-f" : "")
        flags:
            follow: false
        do: |
            ssh $(envs[target_env].ssh) \
                "$(verbose ? "cat" : "tail") $(envs[target_env].root)app/logs/$(target_env).log"
