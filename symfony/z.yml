# @version ">=2.0"

symfony: ~

tasks:
    _symfony.build.composer_install: |
        cd $(build.dir) && composer install --no-scripts --prefer-dist --optimize-autoloader --no-dev --no-suggest --no-progress

    _symfony.build.assets_install: |
        cd $(build.dir) && $(defaults("php_bin", "local", "php")) $(path(symfony.root, symfony.console)) assets:install $(symfony.web) --env=$(target_env) --no-debug --symlink --relative;

    _symfony.build.assetic_dump: |
        cd $(build.dir) && $(defaults("php_bin", "local", "php")) $(path(symfony.root, symfony.console)) assetic:dump --env=$(target_env) --no-debug;

    _symfony.env.flush_cache_force: |
        @(sh ssh(target_env)) rm -rf $(path(envs[target_env].root, symfony.root, symfony.cache, "*")) && $(defaults("php_bin", target_env, "php")) $(path(envs[target_env].root, symfony.root, symfony.console)) cache:warmup --env=$(target_env) --no-debug

    _symfony.env.flush_cache: |
        @(sh ssh(target_env)) $(defaults("php_bin", target_env, "php")) $(path(envs[target_env].root, symfony.root, symfony.console)) cache:clear --env=$(target_env) --no-debug

    build:
        post:
            - @_symfony_build

    _symfony_build:
        do:
            - @_symfony.build.composer_install
            - @(if symfony.assets)  @_symfony.build.assets_install
            - @(if symfony.assetic) @_symfony.build.assetic_dump
    deploy:
        flags:
            rm-cache: false
        post:
            -  @(if !rm_cache) @(if symfony.flush_cache) @_symfony.env.flush_cache
            -  @(if rm_cache) @(if symfony.flush_cache) @_symfony.env.flush_cache_force

    symfony.logs:
        help: |
            Tail the logs at the specified environment.

            If run in verbose mode, the logs are cat'ed.
        args:
            target_env: ?
            level: ? ""
        flags:
            follow: false
        do: |
            @(sh ssh(target_env))
            tail $(follow ? "--follow") $(path(envs[target_env].root, symfony.root, symfony.logs, target_env)).log
